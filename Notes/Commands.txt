Lesson 1 & 2
===============
git help
git init
git config --get user.name
git config --global user.name "Wei Jin"
git config --global user.email "wjin@ggc.edu"
git config --global color.ui true

..create README.txt


git status
git add README.txt
git status
git commit -m "Create README."

..create LICENSE and modify README.txt

git status
git add --all
git commit -m "Create LICENSE and modify README."

git log

..modify LICENSE.txt

git add LICENSE.txt
git diff ==> showing nothing 
git diff --staged ==> showing the differences
git status

git reset HEAD LICENSE.txt ==> unstage LICENSE.txt
git checkout --LICENSE.txt ==> check out the commited version, erase all modifications


..modify README.txt
git commit -a -m "Modify README."  ==> add to stage and commit

git reset --soft HEAD~1 ==> Unroll commit, for soft, the stage is the same as before the commit (^ didn't work)
git add todo.txt
git commit ".. & add todo.txt."

or instead of unroll the commit, do the following:

git add todo.txt
git commit --amend -m "... & add todo.txt."


.. Created a GitHub repo 
git remote add origin https://github.com/wjinggc/git-real-code-school.git
git remote -v
git push -u origin master

git pull ==> get changes from other people to the remote

Summary: 
To add a new remote:
git remote add <name> <url address>

To remove a remote:
git remote rm <name>

To push to a remote:
git push -u <name> <branch>  //<branch> is usually master  
//-u makes git to remember the name and branch, so next time, you can simply type "git push"

DON'T do reset or "commit --amend" after push.


Lesson 3 -- Cloning and Branching
=================================
git clone <URL> 
or 
git clone <URL> new-name

